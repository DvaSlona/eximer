    1. Site Controls
	a. Add/Modify/Delete domain [MySQL done]
	b. Domain can add admin [MySQL done]
	c. Procmail available switch [MySQL done]
	d. SpamAssassin available [MySQL done]
	e. Virus scanner available [MySQL done]
	f. Mailing list availability [For later release]
	g. Quota can be set [MySQL done]
	   -> Need exim config [MySQL done]
	h. Blacklists and Whitelists can be set
	   -> tables are almost ready, code required
	i. UID/GID [MySQL done]
	   -> Let siteadmin decide if these are domain admin tunable [Done]
	j. Domain tag line can be added for outbound mail [Unsure]
	k. Add/Modify/Delete domain admin [MySQL done]
	l. Add/Modify/Delete relay_domains [MySQL done]
	m. Password complexity requirements [For later release]
	o. Add the ability to choose any filesystem directory [MySQL done]
	   -> Check the permissions to make sure Exim can create it
	p. Add limits on how many accounts each domain can have

    2. Domain Controls (depends on site settings)
	a. Add/delete/modify users [MySQL done]
	b. Add/delete/modify admins [MySQL done]
	c. Add/delete/modify aliases [MySQL done]
	d. Quota can be set [MySQL done]
	e. SpamAssassin settings [MySQL done]
	f. Virus Scanner [MySQL done]
	g. Blacklists and Whitelists
	   -> tables are ready, almost code required
	h. Mailing lists [For later release]
	i. UID/GID [MySQL done]
	j. Domain tag line attached to all outgoing mail [Unsure]
	k. Allow any user or alias to act as domain admin [MySQL done]
	l. Password complexity requirements [For later release]
	m. Allow domain admin to tweak any user settings [MySQL Done]
	n. Multiple levels of 'admin':
	   -> Some who can one add users, some who can only change
	      passwords, others who can only create aliases, etc
	      Eg, when an admin tries to create an alias, assign the
	      variable '$task=addalias', and query the db to see if the
	      admin has the privilege to do this. This requires a
	      'flags' column in the db. [For later release]

    3. User Controls  (depends on site and domain settings)
	a. Change password [MySQL done]
	b. SpamAssassin settings [MySQL done]
	c. Virus scanner settings [MySQL done]
	d. Personal block lists [For later release]
	e. Add alias (?)
	f. Vacation response [MySQL done]
	g. Forward incoming mail [MySQL done]
	h. See current quota limit [MySQL done]
	   -> Later, need a way to see current mailbox size
	i. Code to intergrate whitelists to webpages

    4. System Controls
	a. Choose from multiple databases: MySQL, PostgreSQL, LDAP [MySQL done]
	b. Shell scripts to perform all the same work the webpages do.
	   Possibly in PHP or Perl. Probably PHP for simpler DB
	   integration/package maintenance.

    5. Setup
	a. Scripts used to configure vexim the first time.
	   -> These scripts should be deleted (for security purposes)
	      after configuration is completed.
	      The scripts will create the basic database (with site-wide
	      settings), various tables, and the variables.php file from
	      the site admin's input. Would it be wise to require a
	      user/password with enough privileges to create a database
	      and grant privileges on it? I've seen this done with other
	      programs. It certainly makes things easier, but some
	      people might have a problem with entering the mysql god
	      password.
	b. Reduce the overall number of PHP files in the package, by
	   consolidating common functions.
	   -> Various 'submit' pages can be consolidated to one or two,
	      etc.
	c. Add Wash's docs on using tpop3d to CVS
	d. Make APOP work!

